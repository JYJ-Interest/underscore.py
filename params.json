{"body":"Underscore.py is a python port of excellent javascript library underscore.js\r\n\r\n**What is underscore.js?**\r\n\r\n    From underscore page: Underscore.js is a utility-belt library for JavaScript that provides support for the\r\n    usual functional suspects (each, map, reduce, filter...) without extending any core JavaScript objects.\r\n\r\nNOTE: It's obvious that python already has nearly all features of underscore library built-in. I'm not trying to fill any gap in python. If you are coming from JavaScript this library will provide you a familiar interface, a set of tools you already know how to use and micro templating functionality. Use it wisely and try to use built-in functions wherever possible.\r\n\r\n## Installing\r\nClone this repository:\r\n```bash\r\ngit clone git://github.com/serkanyersen/underscore.py.git\r\n```\r\nGet into underscore.py directory\r\n```bash\r\ncd underscore.py\r\n```\r\nRun setup script\r\n```bash\r\nsudo python setup.py install\r\n```\r\nThat's it\r\n\r\n## Usage\r\nImport underscore to your project\r\n```python\r\nfrom underscore import _\r\n```\r\nor if you don't want to mess with _ variable\r\n```python\r\nfrom underscore import _ as us  # You can use any name you want, __ or u\r\n```\r\n\r\n## Use it just like javascript version\r\n```python\r\n# Dynamically\r\n_([\"foo\", \"bar\"]).invoke(\"upper\")  # [\"FOO\", \"BAR\"]\r\n# or statically\r\n_.filter([\"foo\", \"hello\", \"bar\", \"world\"], lambda x, *a: len(x) > 3)  # [\"hello\", \"world\"]\r\n# Do chaining\r\n_([10, 48, 56, 30, 20]).chain().filter(lambda x, *a: x > 20).map(lambda x, *a: x * 2).sortBy().value()\r\n# [60, 96, 112]\r\n```\r\n\r\n## Full micro templating support\r\n```python\r\ntmpl = _.template(\"Name: <% if prefix: %><%= prefix %>. <% endif %><%= name %>\\n\\\r\nLast Name: <%=lname.upper() %>\\n\\\r\n<% if email: %>\\\r\nE-mail: <%= email %>\\n\\\r\n<% endif %>\")\r\n\r\npeople = [{\r\n  \"prefix\": \"\",\r\n  \"name\": \"John\",\r\n  \"lname\": \"Doe\",\r\n  \"email\": \"johndoe@example.com\"\r\n},{\r\n  \"prefix\": \"Mr\",\r\n  \"name\": \"James\",\r\n  \"lname\": \"Brown\",\r\n  \"email\": \"james@brown.net\"\r\n}]\r\n\r\nfor person in people:\r\n  print tmpl(person)\r\n```\r\nOutput\r\n\r\n    Name: John\r\n    Last Name: DOE\r\n    E-mail: johndoe@example.com\r\n    Name: Mr. James\r\n    Last Name: BROWN\r\n    E-mail: james@brown.net\r\n\r\nFor more information and documentation [underscorejs.org](http://underscorejs.org)\r\n\r\nOriginal Source: [Underscore.js on Github](https://github.com/documentcloud/underscore)\r\n\r\n### Disclaimer\r\nPlease keep in mind that this is a direct port of a javascript library, so don't get started with\r\nthe \"but it's not pythonic\" stuff. This library has no intentions to be pythonic, infact it tries to\r\nbring the same underscore experience from javascript to python\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Underscore.py / a python port of underscore.js","google":"","name":"Underscore.py"}